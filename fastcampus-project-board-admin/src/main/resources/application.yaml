debug: false
management.endpoints.web.exposure.include: "*"

logging:
  level:
    com.fastcampus.projectboardadmin: debug
    org.springframework.web.servlet: debug
    org.hibernate.type.descriptor.sql.BasicBinder: trace
    org.springframework.web.client.RestTemplate: debug

spring:
  datasource:
    url: ${LOCAL_DB_URL}
    username: ${LOCAL_DB_USERNAME}
    password: ${LOCAL_DB_PASSWORD}
  #    driver-class-name:  > postgresql Driver를 외울 필요 없이 url을 참조하여 자동으로 설정된다고 함.

  #    mysql정보 > postgresql로 마이그레이션 됨에 따라 주석처리
  #    url: jdbc:mysql://localhost:3306/board
  #    username: fastcampus
  #    password: 102501
  #    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    open-in-view: false
    defer-datasource-initialization: true
    hibernate.ddl-auto: create
    show-sql: true
    properties:
      hibernate.format_sql: true
      hibernate.default_batch_fetch_size: 100
  sql.init.mode: always #애플리케이션 실행 시 테스트 데이터로 초기화 할 건지에 대한 설정
  thymeleaf3:
    decoupled-logic: true
  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${KAKAO_OAUTH_CLIENT_ID}
            client-secret: ${KAKAO_OAUTH_CLIENT_SECRET}
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/kakao" #yaml파일에만 해당하는 방법이고, {}이런 특수한 문자열이 들어가 있는 경우 문자열이라는 걸 인식 시켜주기 위해 쌍따옴표를 써야한다.
            client-authentication-method: client_secret_post
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
  devtools:
    livereload:
      port: 35730

server:
  port: 8081


---

spring:
  config.activate.on-profile: testdb
  datasource:
    url: jdbc:h2:mem:board;mode=mysql
    driver-class-name: org.h2.Driver
  sql.init.mode: always
  test.database.replace: none

---

#헤로쿠가 유료화가 됨에 따라 실제로 프로젝트에 반영하진 않고 코드만 따라 작성함.
#1. url에 username, passwork가 포함되어 있기 때문에 username과 password는 지워져야 함.
#spring:
#  config:
#    activate:
#      on-profile: heroku
#  datasource:
#    url: ${JAWSDB_URL}
#    username: hg
#    password: asdf1234
#  jpa:
#    hibernate:
#      ddl-auto: create
#  sql.init.mode: always